name: 4. Main Workflow CI/CD

on: 
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches: 
      - main
    paths:
      - 'aplicativo/aplicativoNuevo/**'
  push:
    branches:
      - develop

jobs:
  # ci:
  #   name: Run CI Workflow
  #   uses: ./.github/workflows/ci.yml
  #   with:
  #     branch: ${{ github.ref == 'refs/heads/develop' && 'develop' || 'main' }}
  #   secrets: inherit
    
  # cd_job:
  #   name: Run CD Workflow
  #   needs: ci
  #   uses: ./.github/workflows/cd-deploy-aks.yml
  #   with:
  #     version: ${{ needs.ci.outputs.version }}
  #     repository: ${{ needs.ci.outputs.repository }}
  #   secrets: inherit

  ci_dev:
    name: Run CI Workflow for Dev
    if: github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/ci.yml
    with:
      branch: develop
      environment: develop
    secrets: inherit

  ci_prod:
    name: Run CI Workflow for Prod
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/ci.yml
    with:
      branch: main
      environment: production
    secrets: inherit

  cd_dev:
    name: Run CD Workflow for Dev
    needs: ci_dev
    if: github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/cd-deploy-aks.yml
    with:
      version: ${{ needs.ci_dev.outputs.version }}
      repository: ${{ needs.ci_dev.outputs.repository }}
    secrets: inherit

  cd_prod:
    name: Run CD Workflow for Prod
    needs: ci_prod
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Update version in composer.json
        run: |
          current_version=${{ needs.ci_prod.outputs.version }}
          IFS='.' read -r major minor patch <<< "$current_version"
          next_minor=$((minor + 1))
          next_version="$major.$next_minor.$patch"
          jq --arg version "$next_version" '.version = $version' aplicativo/aplicativoNuevo/composer.json > aplicativo/aplicativoNuevo/composer.json.tmp && mv aplicativo/aplicativoNuevo/composer.json.tmp aplicativo/aplicativoNuevo/composer.json

      - name: Run CD Workflow for Prod
        uses: ./.github/workflows/cd-deploy-aks.yml
        with:
          version: ${{ needs.ci_prod.outputs.version }}
          repository: ${{ needs.ci_prod.outputs.repository }}
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    
   
    
