name: 6. CD (Deploy to AKS)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      repository:
        required: true
        type: string

jobs:
  deploy:
    name: 'Azure Kubernetes Service Deployment'
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Print variables
        run: |
          echo "El  valor de las variables son El grupo de recursos ${{ vars.RESOURCE_GROUP_NAME }}, KUBERNETES_CLUSTER_NAME ${{ vars.KUBERNETES_CLUSTER_NAME }}"
          echo "Version: ${{ inputs.version }}"
          echo "Repository: ${{ inputs.repository }}"


      - name: Connection to cluster
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/runner/.bashrc
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          sudo apt-get install build-essential
          brew install Azure/kubelogin/kubelogin
          az account set --subscription 86f76907-b9d5-46fa-a39d-aff8432a1868
          az aks get-credentials --resource-group ${{ vars.RESOURCE_GROUP_NAME }} --name ${{ vars.KUBERNETES_CLUSTER_NAME }} --overwrite-existing
          kubelogin convert-kubeconfig -l azurecli
          kubectl apply -f kubernetes/. -n ns-plopez
          kubectl set image deployment/proyectofinal acrplopez=acrplopezfp2.azurecr.io/${{ inputs.repository }}:${{ inputs.version }} -n ns-plopez
          kubectl describe svc proyectofinal-service -n ns-plopez
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.0/deploy/static/provider/cloud/deploy.yaml
          kubectl get pods --namespace ingress-nginx
          kubectl get service ingress-nginx-controller --namespace=ingress-nginx
