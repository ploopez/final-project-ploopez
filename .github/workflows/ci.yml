name: 5. Docker Image CI Pre/prod

on: 
  workflow_dispatch:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
 

jobs:
  extract_version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get_version.outputs.version }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Version
        id: get_version
        uses: ./.github/actions/get-version
        with:
          branch: ${{ inputs.branch }}
      
      - name: Create Version File
        run: echo "${{ steps.get_version.outputs.version }}" > version.txt

      - name: Save Version as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version.txt
      
      - name: Print Version (extract version en ci.yml)
        run: echo "La version guaardada es ${{ steps.get_version.outputs.version }}"
  
  build_and_push:
    needs: extract_version
    runs-on: ubuntu-latest
    
    outputs:
      repository: ${{ steps.build_and_push.outputs.repository }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Print version input (build and push docker)
        run: echo "La version que se va a taggear es ${{ needs.extract_version.outputs.version }}"

      - name: Build and Push Docker Image
        id: build_and_push
        uses: ./.github/actions/build-and-push-docker
        with:
          version: ${{ needs.extract_version.outputs.version }}
          branch: ${{ inputs.branch }}

      - name: Create Repo File
        run: echo "${{ steps.build_and_push.outputs.repository }}" > repository.txt
      
      - name: Save Repo_name as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: repository
          path: repository.txt
        
      - name: Print Repository Name
        run: echo "El nombre del repositorio guardado es ${{ steps.build_and_push.outputs.repository }}"

        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }} 
